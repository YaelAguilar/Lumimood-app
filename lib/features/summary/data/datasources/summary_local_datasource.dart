import 'dart:developer';
import '../models/summary_model.dart';

abstract class SummaryLocalDataSource {
  Future<SummaryModel> getSummaryByPatient(String patientId);
}

class SummaryLocalDataSourceImpl implements SummaryLocalDataSource {
  // Datos est√°ticos simulando res√∫menes generados por IA
  final Map<String, SummaryModel> _summaries = {};

  SummaryLocalDataSourceImpl() {
    _initializeSummaries();
  }

  void _initializeSummaries() {
    // Res√∫menes para diferentes pacientes
    _summaries['patient_001'] = SummaryModel(
      id: 'summary_001',
      patientId: 'patient_001',
      title: 'Resumen de Progreso Emocional',
      content: '''An√°lisis basado en 24 notas registradas durante las √∫ltimas 4 semanas:

**Patrones Emocionales Identificados:**
‚Ä¢ Predominancia de estados de calma y reflexi√≥n en las tardes
‚Ä¢ Picos de ansiedad principalmente los lunes y mi√©rcoles
‚Ä¢ Mejora gradual en la gesti√≥n del estr√©s laboral

**Temas Recurrentes:**
‚Ä¢ B√∫squeda de equilibrio entre vida personal y profesional
‚Ä¢ Desarrollo de t√©cnicas de mindfulness y respiraci√≥n
‚Ä¢ Fortalecimiento de relaciones interpersonales

**Indicadores de Progreso:**
‚Ä¢ Incremento del 40% en emociones positivas comparado con el mes anterior
‚Ä¢ Mayor conciencia emocional y capacidad de auto-reflexi√≥n
‚Ä¢ Implementaci√≥n exitosa de rutinas de autocuidado

**Recomendaciones:**
‚Ä¢ Continuar con las pr√°cticas de meditaci√≥n matutina
‚Ä¢ Explorar t√©cnicas de gesti√≥n del tiempo para reducir ansiedad
‚Ä¢ Mantener la consistencia en el registro emocional''',
      generatedAt: DateTime.now().subtract(const Duration(days: 1)),
      aiModel: 'GPT-4 Therapeutic Analysis',
      analysedNotesCount: 24,
    );

    _summaries['patient_002'] = SummaryModel(
      id: 'summary_002',
      patientId: 'patient_002',
      title: 'An√°lisis de Bienestar Emocional',
      content: '''Resumen basado en 18 entradas del diario emocional:

**Tendencias Emocionales:**
‚Ä¢ Estados de gratitud y alegr√≠a m√°s frecuentes los fines de semana
‚Ä¢ Episodios de tristeza leve correlacionados con cambios clim√°ticos
‚Ä¢ Notable estabilidad emocional general con peque√±as fluctuaciones

**Insights Principales:**
‚Ä¢ Las actividades creativas generan mayor sensaci√≥n de logro
‚Ä¢ El ejercicio f√≠sico muestra impacto positivo inmediato en el estado de √°nimo
‚Ä¢ Las interacciones sociales act√∫an como reguladores emocionales naturales

**Fortalezas Identificadas:**
‚Ä¢ Excelente capacidad de introspecci√≥n y autoconocimiento
‚Ä¢ Habilidad para identificar triggers emocionales tempranamente
‚Ä¢ Uso efectivo de estrategias de afrontamiento positivas

**√Åreas de Oportunidad:**
‚Ä¢ Desarrollar mayor tolerancia a la incertidumbre
‚Ä¢ Fortalecer la resiliencia ante situaciones imprevistas
‚Ä¢ Explorar nuevas formas de expresi√≥n emocional''',
      generatedAt: DateTime.now().subtract(const Duration(hours: 6)),
      aiModel: 'Claude-3 Emotional Intelligence',
      analysedNotesCount: 18,
    );

    _summaries['patient_003'] = SummaryModel(
      id: 'summary_003',
      patientId: 'patient_003',
      title: 'Evaluaci√≥n de Crecimiento Personal',
      content: '''An√°lisis comprehensivo de 31 registros emocionales:

**Evoluci√≥n Emocional:**
‚Ä¢ Transici√≥n exitosa de estados predominantemente reactivos a proactivos
‚Ä¢ Desarrollo significativo en la regulaci√≥n emocional
‚Ä¢ Mayor frecuencia de emociones asociadas con prop√≥sito y significado

**Patrones de Comportamiento:**
‚Ä¢ Las ma√±anas muestran mayor claridad mental y decisiones m√°s asertivas
‚Ä¢ Los momentos de soledad se han convertido en oportunidades de crecimiento
‚Ä¢ Mejora notable en la comunicaci√≥n de necesidades emocionales

**Logros Destacados:**
‚Ä¢ Reducci√≥n del 60% en episodios de ansiedad severa
‚Ä¢ Incremento en actividades de autocuidado y bienestar
‚Ä¢ Establecimiento de l√≠mites saludables en relaciones personales

**Plan de Continuidad:**
‚Ä¢ Mantener la pr√°ctica diaria de registro emocional
‚Ä¢ Explorar t√©cnicas avanzadas de autorregulaci√≥n
‚Ä¢ Considerar la incorporaci√≥n de actividades de servicio comunitario''',
      generatedAt: DateTime.now().subtract(const Duration(hours: 12)),
      aiModel: 'Gemini Pro Wellness Analysis',
      analysedNotesCount: 31,
    );

    // Resumen por defecto para cualquier paciente sin resumen espec√≠fico
    _summaries['default'] = SummaryModel(
      id: 'summary_default',
      patientId: 'default',
      title: 'Resumen Inicial de Seguimiento',
      content: '''An√°lisis preliminar basado en los primeros registros emocionales:

**Observaciones Iniciales:**
‚Ä¢ El paciente muestra compromiso con el proceso de autorregistro emocional
‚Ä¢ Diversidad emocional saludable con predominancia de estados neutros y positivos
‚Ä¢ Capacidad de introspecci√≥n y reflexi√≥n en desarrollo

**Patrones Tempranos:**
‚Ä¢ Mayor actividad emocional durante las transiciones del d√≠a
‚Ä¢ Respuesta positiva a las actividades de relajaci√≥n y mindfulness
‚Ä¢ Inter√©s genuino en el autoconocimiento y crecimiento personal

**Recomendaciones Iniciales:**
‚Ä¢ Continuar con la consistencia en el registro diario
‚Ä¢ Explorar la conexi√≥n entre actividades espec√≠ficas y estados emocionales
‚Ä¢ Desarrollar un vocabulario emocional m√°s amplio y espec√≠fico

**Pr√≥ximos Pasos:**
‚Ä¢ Mantener la observaci√≥n de patrones durante 2-3 semanas m√°s
‚Ä¢ Identificar triggers y estrategias de afrontamiento personalizadas
‚Ä¢ Establecer objetivos espec√≠ficos de bienestar emocional''',
      generatedAt: DateTime.now().subtract(const Duration(minutes: 30)),
      aiModel: 'AI Therapeutic Assistant',
      analysedNotesCount: 5,
    );
  }

  @override
  Future<SummaryModel> getSummaryByPatient(String patientId) async {
    log('üìã SUMMARY DATA SOURCE: Fetching summary for patient: $patientId');
    await Future.delayed(const Duration(milliseconds: 800)); // Simular latencia de red
    
    final summary = _summaries[patientId] ?? _summaries['default']!;
    
    // Crear una copia con el patientId correcto
    final adjustedSummary = SummaryModel(
      id: summary.id,
      patientId: patientId,
      title: summary.title,
      content: summary.content,
      generatedAt: summary.generatedAt,
      aiModel: summary.aiModel,
      analysedNotesCount: summary.analysedNotesCount,
    );
    
    log('‚úÖ SUMMARY DATA SOURCE: Found summary "${adjustedSummary.title}" for patient $patientId');
    return adjustedSummary;
  }
}
